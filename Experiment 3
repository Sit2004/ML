import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics


data=pd.read_csv("path")
data.head()

data= data.drop(['Serial No.'], axis=1)


data.info()

data['Classlabel'].value_counts()


data['SOP'].value_counts()

print(data.Classlabel== 1)

import matplotlib.pyplot as plt
plt.figure(figsize=(10,20));
sns.countplot(data['SOP'].values);

feature_cols = ['GRE Score','TOEFL Score','University
Rating','SOP','CGPA','Research']
X = data[feature_cols] # Features
y = data.Classlabel # Target variable


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,
random_state=1) # 70% training and 30% test


len(X_train)

len(X_test)


dtclf = DecisionTreeClassifier()

y_pred = dtclf.predict(X_test)

accuracy=metrics.accuracy_score(y_pred,y_test)*100
print("Accuracy of the model is {:.2f}".format(accuracy))


metrics.confusion_matrix(y_pred,y_test)

from sklearn import tree
tree.plot_tree(dtclf)

